import java.util.Iterator;
import java.util.Scanner;
public class LinerarLinked_List
{
class Node {
    int data;
    Node next;
    Node(int data) {
        this.data = data;
        this.next = null;
    }
}
    Node head=null;
    public void creation()
    {
    	int data,n,m,p ;
    	Scanner sc = new Scanner(System.in);
    	do {
    	System.out.println("enter data");
        data = sc.nextInt();
    	Node new_node=new Node(data);
    	if(head==null)
    	{
    		head=new_node;
    		
    	}
    	else
    	{
    		System.out.println("Enter 1 to insert item at begining , press 2 for insert item at end , and 3 for specific pos");
    		m=sc.nextInt();
    		switch(m) {
    		case 1:new_node.next=head;
    		head=new_node;
    		
    		break;
    		case 2:
    		Node temp=head;
    		while(temp.next!=null) {
    			temp=temp.next;
    		}
    		temp.next=new_node;
    		break;
    		
    		case 3:
    			System.out.println("enter pos no where element to be insert");
    			p=sc.nextInt();
    		Node temp1=head;
    		for(int i=0;i<(p-1);i++)
    		{
    			new_node.next=temp1.next;
    			temp1.next=new_node;
    			break;
    			
    		}
    		
    		}
    	}
    	System.out.println("do you want to continue then press 1 :");
    	n=sc.nextInt();
    	}while(n==1);
    	
    }
    public void delete()
    {
    	int data,n,m,p ;
    	Scanner sc = new Scanner(System.in);
    	do {
    	if(head==null)
    	{
    		System.out.println("ll is empty");
    		
    	}
    	else
    	{
    		System.out.println("Enter 1 to delete item at begining , press 2 for delete item at end , and 3 for specific pos");
    		m=sc.nextInt();
    		switch(m) {
    		case 1:
    			
    		Node temp=head;
    		temp=temp.next;
    		head =temp;
    		
    		
    		break;
    		
    		case 2:
    			Node temp1=head;
    			Node ptr =temp1.next;
    			while(ptr.next!=null)
    			{
    				temp1=ptr;
    				ptr=ptr.next;
    			}
    			temp1.next=null;
    			
    			break;
    		
    		case 3:
    			System.out.println("enter pos no where element to be deleted");
    			p=sc.nextInt();
    			Node temp2=head;
    			Node ptr1=temp2.next;
    			for(int i=0;i<p-2;i++)
    			{
    				temp2=ptr1;
    				ptr1=ptr1.next;
    			
    	        }
    			temp2.next=ptr1.next;
    		
    		break;
    		
    			
    		
    		
    		}
    	}
    	System.out.println("do you want to continuing delete then press 1 :");
    	n=sc.nextInt();
    	}while(n==1);
    }
    public void traversar()
    {   Node temp = head;
    	if (head==null)
    	{
    		System.out.println("link list not exist");
    		
    	}
    	else
    	{
    		while(temp!=null)
    		{
    			System.out.println(temp.data);
    			temp=temp.next;
    		}
    	}
    }
	public static void main(String[] args) {
		LinerarLinked_List lll = new LinerarLinked_List();
		lll.creation();
		lll.traversar();
		lll.delete();
		
	
   

}
}





